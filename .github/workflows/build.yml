name: Build source code and check lint

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - "*"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        id: install_code
        run: bun i
      - name: Lint
        id: lint_code
        run: bun run lint
      - name: Build
        id: build_code
        run: bun run build
      - name: Verify
        id: verify_code
        run: bun run verify:web
  build_android:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        id: install_code
        run: bun i
      - name: Setup java
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: '21'
          cache: 'gradle'
          cache-dependency-path: | # optional
            android/.gradle/*.gradle*
            android/**/gradle-wrapper.properties
      - name: Build
        id: build_code
        run: npm run verify:android
      - name: Run Android Tests
        id: test_android
        if: ${{ !startsWith(github.ref, 'refs/tags/6.') }}
        run: npm run test:android
  build_ios:
    needs: lint
    runs-on: macOS-latest
    steps:
      - name: Check out
        uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
      - uses: actions/cache@v4
        id: cocoapods-cache
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Install dependencies
        id: install_code
        run: bun i
      - name: Build
        id: build_code
        run: bun run verify:ios
      - name: Run iOS Tests
        id: test_ios
        if: ${{ !startsWith(github.ref, 'refs/tags/6.') }}
        run: npm run test:ios
  deploy:
    needs: [build_android, build_ios]
    runs-on: ubuntu-latest
    name: "Build code and npm release"
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Check out
        uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        id: install_code
        run: bun i
      - name: Build
        id: build_code
        run: bun run build
      - uses: js-devtools/npm-publish@v4
        if: ${{ startsWith(github.ref, 'refs/tags/6.') }}
        with:
          token: ${{ secrets.NPM_TOKEN }}
          tag: lts-v6
          provenance: true
      - uses: js-devtools/npm-publish@v4
        if: ${{ !contains(github.ref, '-alpha.') && !startsWith(github.ref, 'refs/tags/6.') }}
        with:
          token: ${{ secrets.NPM_TOKEN }}
          provenance: true
      - uses: js-devtools/npm-publish@v4
        if: ${{ contains(github.ref, '-alpha.') }}
        with:
          token: ${{ secrets.NPM_TOKEN }}
          tag: next
          provenance: true
      # - name: Run release LLM
      #   uses: constantincerdan/anno@v4
      #   with:
      #     mode: release-summary
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     release_tag: ${{ github.ref_name }}
      #     chat_gpt_api_key: ${{ secrets.OPENAI_API_TOKEN }}
      #     chat_gpt_model: "gpt-5-mini"
      - name: Create GitHub release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          # body: ${{ steps.create_release.outputs. }}
          name: ${{ startsWith(github.ref, 'refs/tags/6.') && 'v6 LTS - ' || '' }}${{ github.ref_name }}
          prerelease: ${{ contains(github.ref, '-alpha.') }}
